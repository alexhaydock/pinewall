#!/bin/sh
set -e

# Images are stored in the images/ folder, named like pinewall.2024123101.efi.img where
# the last two digits are an increasing counter.

latest_image() {
    ls -1 images | sort | tail -n 1
}

# We add the `.img` suffix to our EFI binary so that we can deploy it
# in accordance with the file extension limitations of the bpg/proxmox
# provider for Terraform
next_image() {
    current_date=$(date +%Y%m%d)
    counter=1
    while [ -e "images/pinewall.${current_date}$(printf %02d $counter).efi.img" ]; do
        counter=$((counter + 1))
    done
    echo "pinewall.${current_date}$(printf %02d $counter).efi.img"
}

fixup_image() {
    current_date=$(date +%Y%m%d)
    counter=1
    while [ -e "images/pinewall.${current_date}$(printf %02d $((counter + 1))).efi.img" ]; do
        counter=$((counter + 1))
    done
    echo "pinewall.${current_date}$(printf %02d $counter).efi.img"
}

case "$1" in
    build)
        if [ "$2" = "--fixup" ]; then
            image=$(fixup_image)
        else
            image=$(next_image)
        fi
        echo "Building image $image"
        mkdir -p "$PWD"/images
        chmod +x "$PWD"/root/etc/init.d/*  # Ensure that all init.d scripts are executable otherwise we risk a failure when starting the system
        podman run --privileged --rm -it -v "$PWD":/mnt:z -w /root \
            docker.io/library/alpine:3.21 /mnt/pinewall-build.sh /mnt/images/"$image"
        ;;
    test)
        image=$(latest_image)
        echo "Running image $image in QEMU (terminate with Ctrl-A X," \
            "shutdown with Ctrl-A C system_powerdown)"
        qemu-system-x86_64 -m 2G -nographic \
            -bios /usr/share/edk2/ovmf/OVMF_CODE.fd -kernel images/"$image" \
            -device virtio-net,netdev=nic \
            -netdev user,hostname=pinewall,id=nic
        ;;
    deploy)
        (
        # Deploy to Proxmox
        export PROXMOX_VE_USERNAME="root@pam"
        export PROXMOX_VE_PASSWORD="$(sudo tpm2 rsadecrypt -c 0x81010001 ~/.ssh/tpm-$(hostname)/api_key_prox_rtr.enc)"
        export TF_VAR_image_name=$(latest_image)
        podman run -it --rm -v "$PWD":/mnt:z \
            --env PROXMOX_VE_USERNAME \
            --env PROXMOX_VE_PASSWORD \
            --env TF_VAR_image_name \
            --workdir /mnt \
            docker.io/library/alpine:3.21 sh -c \
              'apk add --no-cache opentofu && tofu apply'
        )
    "")
        echo "Usage: $0 <subcommand>"
        echo
        echo "Subcommands:"
        echo "  build [ --fixup ] - Build the image"
        echo "  test              - Test the image locally in QEMU"
        echo "  deploy            - Deploy to Proxmox using Terraform"
        echo
        echo "Latest image: $(latest_image)"
        ;;
    *)
        echo "Error: Unknown subcommand '$1'"
        exit 1
        ;;
esac
